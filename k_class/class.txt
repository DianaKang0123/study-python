클래스 - 반
    공통 요소를 한 번만 선언하자!

    1. 타입이다.
        클래스 안에 선언된 변수와 메소드(어딘가 안에 선언된 함수)를 사용하고 싶다면,
        해당 클래스 타입으로 변수를 선언해야 한다.

    2. 주어이다.
        클래스를 사용하기 위해서는 클래스를 주어와 같이 맨 앞에 나와야한다.
        원숭이가 바나나를 먹는다.
        Monkey.eat("banana")
        클래스의 이름은 대문자로 시작해야한다.

클래스 선언
    class 클래스명(카멜표기법):
        필드(변수, 메소드)                 필드= 변수안에 선언된 모든것(c언어에서는 멤버라고 부름)

클래스의 필드 사용
    1. 객체화(instance)
        필드에 접근하려면 구체적인 객체가 필요
        객체(instance variable)를 만드는 작업
        추상적인 개념을 구체화시키는 작업

    2.

생성자(클래스이름())
    return 기능이 없음, 무조건 주소값을 리턴하게 되어있다.
    클래스 이름 뒤에 소괄호가 있는 형태, 메소드와 기능이 똑같지만 메소드라고 부르지 않는다.
    생성자는 할당한 필드의 주소를 자동으로 리턴하기 때문에,
    선언 시, 리턴이라는 기능을 사용할 수 없다.
    메모리에 올리고 주소값 가져오는 목적 1
    초기화 목적 2
    파이썬에서는 이 두개를 분리 생성자, 할당자로 분리하여 사용 (다른 언어는 하나)

기본생성자
    컴파일러가 자동으로 넣어줌
    매개변수가 없는 생성자를 뜻하며, 클래스 선언시 자동으로 선언된다.
    사용자가 직접 생성자를 선언하게 되면 자동으로 선언되지 않는다.



self
    필드에 접근한 객체가 누구인지 알아야 해당 필드에 접근할 수 있다.
    이 때 접근한 객체가 가지고 있는 필드의 주소값이 self라는 변수에 자동으로 담긴다.




